{"version":3,"sources":["components/home.js","components/project-item.js","static/projects.js","components/project-list.js","hook/useWindowPosition.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","height","fontFamily","welcomeBackground","backgroundColor","width","alignItems","margin","position","top","welcomeDiv","padding","textAlign","welcomeTxt","color","fontSize","welcomeTxtColored","iconArrow","iconImage","iconButton","contactDiv","right","zIndex","Home","classes","useState","checked","setChecked","useEffect","className","id","Collapse","in","timeout","collapsedHeight","to","smooth","IconButton","onClick","window","open","maxWidth","borderRadius","media","objectFit","objectPosition","borderTopLeftRadius","borderTopRightRadius","title","fontWeight","descripton","whiteSpace","overflow","textOverflow","buttonTxt","ImgMediaCard","project","Card","CardActionArea","CardMedia","image","imageURL","component","liveURL","CardContent","Typography","gutterBottom","variant","description","CardActions","Button","size","githubURL","projects","flexGrow","minHeight","breakpoints","down","grid","ProjectList","animation","setAnimation","useLayoutEffect","updatePosition","offsetSetHeight","document","getElementById","offsetHeight","pageYOffset","addEventListener","removeEventListener","useWindowPosition","Grid","container","spacing","map","key","item","xs","sm","md","lg","xl","backgroundImage","backgroundRepeat","backgroundSize","App","CssBaseline","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d2f1a1c6.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { IconButton, Collapse } from '@material-ui/core';\r\nimport { Link } from 'react-scroll';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        height: '100vh',\r\n        fontFamily: 'Nunito'\r\n    },\r\n\r\n    welcomeBackground: {\r\n        backgroundColor: '#FFFFFFCC',\r\n        width: '100%',\r\n        alignItems: 'center',\r\n        margin: 'auto',\r\n        position: 'absolute',\r\n        top: '35%'\r\n    },\r\n\r\n    welcomeDiv: {\r\n        padding: '0.2rem',\r\n        textAlign: 'center',\r\n\r\n    },\r\n\r\n    welcomeTxt: {\r\n        color: '#000',\r\n        fontSize: '2rem'\r\n    },\r\n\r\n    welcomeTxtColored: {\r\n        color: '#e80071'\r\n    },\r\n\r\n    iconArrow: {\r\n        color: '#e80071',\r\n        fontSize: '4rem'\r\n    },\r\n\r\n    iconImage: {\r\n        color: '#000',\r\n        fontSize: '1rem'\r\n    },\r\n\r\n    iconButton: {\r\n        color: '#000',\r\n        fontSize: '2rem'\r\n    },\r\n\r\n    contactDiv: {\r\n        width: '3.5rem',\r\n        position: 'fixed',\r\n        right: '0',\r\n        top: '40%',\r\n        zIndex: '2'\r\n    }\r\n}));\r\n\r\nexport default function Home() {\r\n    const classes = useStyles();\r\n\r\n    const [checked, setChecked] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setChecked(true);\r\n    }, []);\r\n\r\n    return (\r\n        <div className={classes.root} id='home'>\r\n\r\n            <div className={classes.welcomeBackground}>\r\n                <Collapse in={checked}   {...(checked ? { timeout: 1000 } : {})} collapsedHeight={15}>\r\n                    <div className={classes.welcomeDiv}>\r\n                        <h1 className={classes.welcomeTxt}>\r\n                            Hello,   I'm   <span className={classes.welcomeTxtColored}> Zeyneb</span>.\r\n                            <br />\r\n                            I am a Frontend Developer\r\n                        </h1>\r\n                        <h2><LocationOnIcon className={classes.iconImage} /> Epsom, UK </h2>\r\n                        <div>\r\n                            <Link to='project-list' smooth={true}>\r\n                                <IconButton>\r\n                                    <ExpandMoreIcon className={classes.iconArrow} />\r\n                                </IconButton>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                </Collapse>\r\n            </div>\r\n\r\n            <div className={classes.contactDiv}>\r\n                <IconButton onClick={() => {\r\n                    window.open('https://github.com/zeynebesendir');\r\n                }}>\r\n                    <GitHubIcon className={classes.iconButton} />\r\n                </IconButton>\r\n\r\n                <IconButton onClick={() => {\r\n                    window.open('https://www.linkedin.com/in/zeynebesendir');\r\n                }}>\r\n                    <LinkedInIcon className={classes.iconButton} />\r\n                </IconButton>\r\n                <IconButton onClick={() => {\r\n                    window.open('mailto:hi.zeyneb@gmail.com');\r\n                }}>\r\n                    <EmailIcon className={classes.iconButton} />\r\n                </IconButton>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Collapse from '@material-ui/core/Collapse';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n\r\n        maxWidth: 750,\r\n        height: 640,\r\n        backgroundColor: '#292C34',\r\n        margin: '2rem',\r\n        borderRadius: '12px',\r\n        padding: '0.04rem'\r\n\r\n    },\r\n    media: {\r\n        height: 500,\r\n        objectFit: 'cover',\r\n        objectPosition: 'top center',\r\n        backgroundColor: '#292C34',\r\n        borderTopLeftRadius: '12px',\r\n        borderTopRightRadius: '12px',\r\n\r\n    },\r\n\r\n    title: {\r\n        fontFamily: 'Nunito',\r\n        fontWeight: 'bold',\r\n        color: '#fff',\r\n        fontSize: 18\r\n    },\r\n\r\n    descripton: {\r\n        fontFamily: 'Nunito',\r\n        whiteSpace: 'nowrap',\r\n        overflow: 'hidden',\r\n        textOverflow: 'ellipsis',\r\n        color: '#ddd',\r\n        fontSize: 16\r\n    },\r\n    buttonTxt: {\r\n        fontFamily: 'Nunito',\r\n        fontWeight: 'bold',\r\n        color: '#e80071',\r\n        fontSize: 14\r\n    },\r\n});\r\n\r\nexport default function ImgMediaCard({ project, checked }) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Collapse in={checked}  {...(checked ? { timeout: 2000 } : {})}>\r\n\r\n            <Card className={classes.root}>\r\n\r\n                <CardActionArea>\r\n                    <CardMedia\r\n                        className={classes.media}\r\n                        image={project.imageURL}\r\n                        title=\"Project\"\r\n                        component='img'\r\n                        onClick={() => {\r\n                            window.open(project.liveURL);\r\n                        }}\r\n                    />\r\n\r\n                    <CardContent >\r\n                        <Typography\r\n                            gutterBottom\r\n                            variant=\"h5\"\r\n                            component=\"h1\"\r\n                            className={classes.title}>\r\n                            {project.title}\r\n                        </Typography>\r\n                        <Typography\r\n                            variant=\"body2\"\r\n                            color=\"textSecondary\"\r\n                            component=\"p\"\r\n                            className={classes.descripton}>\r\n                            {project.description}\r\n                        </Typography>\r\n                    </CardContent>\r\n                </CardActionArea>\r\n                <CardActions>\r\n                    <Button size=\"medium\" className={classes.buttonTxt} color=\"primary\" onClick={() => {\r\n                        window.open(project.githubURL);\r\n                    }} >\r\n                        GitHub\r\n                </Button>\r\n                    <Button size=\"medium\" className={classes.buttonTxt} color=\"primary\" onClick={() => {\r\n                        window.open(project.liveURL);\r\n                    }} >\r\n                        Open Project\r\n                </Button>\r\n                </CardActions>\r\n            </Card>\r\n\r\n        </Collapse>\r\n    );\r\n}\r\n","const projects = [\r\n    {\r\n        id: 'P01',\r\n        title: 'E-Commerce App',\r\n        description: 'React, Redux, Sass, Firebase',\r\n        imageURL: process.env.PUBLIC_URL + '/assets/online-shopping.png',\r\n        githubURL: 'https://github.com/zeynebesendir/crwn-clothing',\r\n        liveURL: 'https://zeynebesendir.github.io/crwn-clothing/'\r\n    },\r\n    {\r\n        id: 'P02',\r\n        title: 'Covid Dashboard',\r\n        description: 'React, JavaScript, JSON, Material-UI, DevExtreme',\r\n        imageURL: process.env.PUBLIC_URL + '/assets/covid-dashboard.png',\r\n        githubURL: 'https://github.com/zeynebesendir/covid19-data-visualisation',\r\n        liveURL: 'https://zeynebesendir.github.io/covid19-data-visualisation/'\r\n    },\r\n    {\r\n        id: 'P03',\r\n        title: 'Movie Box',\r\n        description: 'C#, XAML, JSON, OOP',\r\n        imageURL: process.env.PUBLIC_URL + '/assets/movie-box.png',\r\n        githubURL: 'https://github.com/zeynebesendir/movie-box',\r\n        liveURL: 'https://github.com/zeynebesendir/movie-box'\r\n    },\r\n    {\r\n        id: 'P04',\r\n        title: 'Portfolio Webpage',\r\n        description: 'React,  JavaScript, Material-UI',\r\n        imageURL: process.env.PUBLIC_URL + '/assets/portfolio-page.png',\r\n        githubURL: 'https://github.com/zeynebesendir/portfolio',\r\n        liveURL: 'https://zeynebesendir.github.io/'\r\n    },\r\n]\r\n\r\nexport default projects;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport ProjectItem from './project-item';\r\nimport projects from '../static/projects';\r\nimport useWindowPosition from '../hook/useWindowPosition';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        minHeight: '100vh',\r\n        [theme.breakpoints.down('md')]: {\r\n        }\r\n    },\r\n    grid: {\r\n        padding: '2rem'\r\n    }\r\n\r\n    /*\r\n    display : flex  listed items horizontally\r\n    justifyContent : center horizontally aligned\r\n    alignItems : center vertically aligned\r\n    */\r\n\r\n}));\r\n\r\nexport default function ProjectList() {\r\n    const classes = useStyles();\r\n    const checked = useWindowPosition('home');\r\n    /*\r\n    checked is the animation' s state\r\n    animation will be run after scrolling the top (home) of the page\r\n    useWindowPosition will check the position/offset of the home. \r\n    When the offset value is changed, animation will begin.\r\n    */\r\n    return (\r\n        <div className={classes.root} id='project-list'>\r\n            <Grid container spacing={0} className={classes.grid}>\r\n                {projects.map(project => (\r\n                    <Grid key={project.id} item xs={12} sm={12} md={12} lg={6} xl={6}>\r\n                        <ProjectItem project={project} checked={checked} />\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n        </div>);\r\n}","import { useLayoutEffect, useState } from 'react';\r\n\r\n\r\n/*\r\nanimation will be run after scrolling the top (home) of the page\r\nuseWindowPosition will check the position/offset of the home. \r\nWhen the offset value is changed, the animation will begin.\r\n*/\r\n\r\nexport default function useWindowPosition(id) {\r\n    const [animation, setAnimation] = useState(false);\r\n\r\n    useLayoutEffect(() => {\r\n        function updatePosition() {\r\n            const offsetSetHeight = window.document.getElementById(id).offsetHeight;\r\n            if (window.pageYOffset > offsetSetHeight * 0.7) {\r\n                setAnimation(true);\r\n            }\r\n        }\r\n\r\n        window.addEventListener('scroll', updatePosition);\r\n        updatePosition();\r\n        return () => window.removeEventListener('scroll', updatePosition);\r\n    }, [id]);\r\n\r\n    return animation;\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { CssBaseline } from '@material-ui/core';\r\nimport Home from './components/home';\r\nimport ProjectList from './components/project-list';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundImage: `url(${process.env.PUBLIC_URL + '/assets/background.jpg'})`,\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundSize: 'cover',\r\n    minHeight: '100vh'\r\n  },\r\n}));\r\n\r\nexport default function App() {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (<div className={classes.root} >\r\n    <CssBaseline />\r\n    <Home />\r\n    <ProjectList />\r\n  </div>);\r\n}\r\n\r\n/*\r\nyarn add @material-ui/core\r\n\r\nyarn add @material-ui/icons\r\n\r\nnpm i react-scroll\r\n \r\n */","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}